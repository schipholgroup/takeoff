pool:
  vmImage: ubuntu-16.04
trigger:
  branches:
    include:
    - refs/*

steps:
- task: DockerCompose@0
  displayName: Run python linting
  inputs:
    dockerComposeCommand: |
      run --rm python bash -c "python setup.py flake8"

- task: DockerCompose@0
  displayName: Run python tests
  inputs:
    dockerComposeCommand: |
      run --rm dockerception bash -c "python setup.py test && find . -name '*__pycache__' -exec rm -rf {} \+"
      # the find cache removal is there to remove the pytest cache from the docker container,
      # otherwise the new Azure Devops vm starts complaining about access rights... f*cking MSFT

- task: DockerCompose@0
  displayName: Run Docker linting
  inputs:
    dockerComposeCommand: |
      run --rm hadolint bash -c "hadolint Dockerfile"

- task: PublishTestResults@2
  inputs:
    testResultsFiles: $(System.DefaultWorkingDirectory)/testresults.xml

- task: PublishCodeCoverageResults@1
  displayName: 'Publish coverage results'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage.xml
    reportDirectory: $(System.DefaultWorkingDirectory)/htmlcov
    failIfCoverageEmpty: true

- script: docker login --username ${REGISTRY_USERNAME} --password ${REGISTRY_PASSWORD} ${REGISTRY_LOGIN_SERVER}
  displayName: Login to registry

- task: DockerCompose@0
  displayName: Deploy to Azure and Databricks
  inputs:
    dockerComposeCommand: |
      run --rm dockerception runway
  env:
    AZURE_TENANTID: ${azure_tenantid}
    AZURE_KEYVAULT_SP_USERNAME_DEV: $(azure_keyvault_sp_username_dev)
    AZURE_KEYVAULT_SP_PASSWORD_DEV: $(azure_keyvault_sp_password_dev)
    AZURE_KEYVAULT_SP_USERNAME_ACP: $(azure_keyvault_sp_username_acp)
    AZURE_KEYVAULT_SP_PASSWORD_ACP: $(azure_keyvault_sp_password_acp)
    AZURE_KEYVAULT_SP_USERNAME_PRD: $(azure_keyvault_sp_username_prd)
    AZURE_KEYVAULT_SP_PASSWORD_PRD: $(azure_keyvault_sp_password_prd)
    JFROG_USERNAME: $(jfrog_username)
    JFROG_PASSWORD: $(jfrog_password)
